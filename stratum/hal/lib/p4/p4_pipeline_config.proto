// Copyright 2018 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


// The P4PipelineConfig contains data generated by the Hercules p4c backend
// to help Hercules switches intepret P4 runtime requests and P4Info content.

syntax = "proto3";

option cc_generic_services = false;

package stratum.hal;

import "p4/v1/p4runtime.proto";
import "stratum/hal/lib/p4/p4_control.proto";
import "stratum/hal/lib/p4/p4_table_map.proto";
import "stratum/public/proto/p4_annotation.proto";

// The P4PipelineConfig message conists of these fields:
//  table_map - contains a map from P4 object name to descriptor data that
//      supports mapping between P4 runtime requests, P4Info, and internal
//      HAL flow entries.
//  p4_controls - present the control methods from the P4 program in a form
//      that the HAL switch can use for logical-to-physical table translation.
//  idle_pipeline_stages - identify any forwarding pipeline stages that are
//      not needed by tables in the P4 program.
//  static_table_entries - contains a WriteRequest.updates() entry for each
//      "const entry" table property in the P4 program.
message P4PipelineConfig {
  map<string, P4TableMapValue> table_map = 1;
  repeated P4Control p4_controls = 2;
  repeated P4Annotation.PipelineStage idle_pipeline_stages = 3;
  p4.v1.WriteRequest static_table_entries = 4;
}
